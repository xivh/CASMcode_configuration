name: Testing c++ only on ubuntu-latest

on:
  push:
  pull_request:
  schedule:
    - cron: '0 12 * * 0'

env:
  SKBUILD_BUILD_OPTIONS: --verbose

jobs:
  build-depends:
    uses: ./.github/workflows/test-linux-dependencies.yml

  build:
    needs: build-depends
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Set up requirements & configuration variables
        run: |
          sudo apt-get update
          sudo apt-get install build-essential cmake
          pip install --upgrade pip wheel build
          echo "SKBUILD_BUILD_OPTIONS=${{ env.SKBUILD_BUILD_OPTIONS }}" >> "$GITHUB_ENV"

      ### libcasm-global ###
      - name: restore libcasm-global cache
        id: cache-libcasm-global-restore
        uses: actions/cache/restore@v4
        with:
          path: CASMcode_global/dist
          key: ${{ runner.os }}-libcasm-global-v2-2-0

      ### libcasm-xtal ###
      - name: restore libcasm-xtal cache
        id: cache-libcasm-xtal-restore
        uses: actions/cache/restore@v4
        with:
          path: CASMcode_crystallography/dist
          key: ${{ runner.os }}-libcasm-xtal-v2-2-0

      ### libcasm-clexulator ###
      - name: restore libcasm-clexulator cache
        id: cache-libcasm-clexulator-restore
        uses: actions/cache/restore@v4
        with:
          path: CASMcode_clexulator/dist
          key: ${{ runner.os }}-libcasm-clexulator-v2-2-0

      - name: Install CASM dependencies
        run: |
          pip install CASMcode_global/dist/*.whl
          pip install CASMcode_crystallography/dist/*.whl
          pip install CASMcode_clexulator/dist/*.whl
          pip install -r build_requirements.txt

      - name: configure
        shell: bash
        run: |
          mkdir build_cxx_only
          cd build_cxx_only
          cmake -DCMAKE_BUILD_TYPE=Release ..

      - name: make
        shell: bash
        run: |
          cd build_cxx_only
          make -j4 VERBOSE=1

      - name: install
        shell: bash
        run: |
          cd build_cxx_only
          make install

      - name: configure tests
        shell: bash
        run: |
          mkdir build_cxx_test
          cd build_cxx_test
          cmake -DCMAKE_BUILD_TYPE=Release ../tests

      - name: make tests
        shell: bash
        run: |
          cd build_cxx_test
          make -j4 VERBOSE=1

      - name: run tests
        shell: bash
        run: |
          cd build_cxx_test
          export CASM_PREFIX=$(python -m libcasm.casmglobal --prefix)
          make test

      - name: upload test log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: libcasm-configuration-cxx-test-log
          path: build_cxx_test/Testing/Temporary/LastTest.log
